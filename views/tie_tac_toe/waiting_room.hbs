<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game Home</title>
    <link rel="stylesheet" href="/styles/styles.css">
</head>

<body>
    <header>
        <nav>
            <ul>
                <li><a href="/rooms">Home</a></li>
                <li><a href="/create-rooms">Create Table</a></li>
                <li><a href="/leaderboard">Leaderboard</a></li>
                <li><a href="/ranked-player">Ranked Player</a></li>
                <li><a href="/profile">Profile</a></li>
                <li><a href="/logout">Logout</a></li>
            </ul>
        </nav>
    </header>

    <div class="main-container">
        <div class="sidebar">
        <h3>Online Users</h3>
        <div style="display: flex; flex-direction: column;">
            {{#each onlineUsers}}
            <div class="user-item">
                <img src="{{this.avatar}}" alt="User Avatar" class="avatar">
                <p class="username">{{this.username}} </p>
            </div>
            {{else}}
            <p>No users online</p>
            {{/each}}
        </div>
        </div>

        <div class="game-tables">
            <h3>Game Tables</h3>
            <div class="tables-list">
                {{#each gameTables}}
                <div class="table-item">
                    <div class="table-info">
                        <p>Table {{this.id}} -
                            {{#if this.is_playing}}
                            <span class="status playing">Playing</span>
                            {{else}}
                            <span class="status waiting">Waiting</span>
                            {{/if}}
                        </p>
                    </div>
                </div>
                {{else}}
                <p class="no-tables">No tables available</p>
                {{/each}}
            </div>
        </div>


     <div class="chat-box">
        <h3>World Chat</h3>
        <div class="chat-history" id="chat-box">
            {{#each chatMessages}}
            <p><span class="chat-time">{{this.createdAt}}</span> - <span class="chat-user">{{this.username}}</span>:
                {{this.message}}</p>
            {{/each}}
        </div>
        <div class="chat-input">
            <textarea id="message" name="message" placeholder="Type a message..." required></textarea>
            <button id="submit-chat" type="submit">Send</button>
        </div>
     </div>
    </div>

    <footer>
        <p>&copy; 2024 Game Tic Tac Toe</p>
    </footer>
</body>
<style>
    body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
}

header {
  background-color: #333;
  padding: 10px;
  text-align: center;
}

header nav ul {
  list-style: none;
  padding: 0;
}

header nav ul li {
  display: inline;
  margin: 0 10px;
}

header nav ul li a {
  color: white;
  text-decoration: none;
}

.main-container {
  display: flex;
  justify-content: space-between;
  padding: 20px;
}

.sidebar, .game-tables, .chat-box {
  width: 30%;
  padding: 20px;
  border: 1px solid #ccc;
}

.sidebar {
    padding: 20px;
    border: 1px solid #ccc;
    width: 300px;
    background-color: #f9f9f9;
}

.sidebar h3 {
    margin-bottom: 20px;
    font-size: 18px;
    font-weight: bold;
}

.user-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    padding: 10px;
    border-radius: 5px;
    background-color: #e9ecef;
}

.avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 10px;
}

.username {
    margin: 0;
    font-size: 16px;
    font-weight: 600;
}

.sidebar .user-item:hover {
    background-color: #d3d3d3;
}

.sidebar .user-item:last-child {
    margin-bottom: 0;
}
.game-tables {
    padding: 20px;
    border: 1px solid #ccc;
    background-color: #f9f9f9;
    height: 400px; 
}

.game-tables h3 {
    margin-bottom: 20px;
    font-size: 18px;
    font-weight: bold;
}

.tables-list {
    height: 300px;
    overflow-y: auto; 
}

.game-tables .table-item {
    display: flex;
    align-items: center;
    padding: 10px;
    border-bottom: 1px solid #ddd;
}

.game-tables .table-item:last-child {
    border-bottom: none;
}

.game-tables .table-info {
    display: flex;
    flex-direction: column;
    margin-left: 10px;
}

.game-tables .status {
    font-weight: bold;
    margin-left: 5px;
}

.game-tables .status.playing {
    color: green;
}

.game-tables .status.waiting {
    color: orange;
}

.game-tables .no-tables {
    padding: 10px;
    color: #888;
    font-style: italic;
}

.game-tables li:hover {
    background-color: #f1f1f1;
    cursor: pointer;
}

.chat-box {
    padding: 20px;
    border: 1px solid #ccc;
    background-color: #f9f9f9;
    width: 350px;
    height: 450px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.chat-box h3 {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 15px;
    color: #333;
}

.chat-history {
    flex-grow: 1;
    padding: 10px;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 5px;
    max-height: 250px;
    overflow-y: auto;
    margin-bottom: 10px;
    font-size: 14px;
    color: #333;
}

.chat-history p {
    margin: 5px 0;
    padding: 3px;
}

.chat-history .chat-time {
    font-size: 12px;
    color: #999;
}

.chat-history .chat-user {
    font-weight: bold;
    color: #0066cc;
}

.chat-input {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.chat-input textarea {
    width: 100%;
    height: 60px;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ddd;
    font-size: 14px;
    color: #333;
    resize: none;
}

.chat-input button {
    align-self: flex-end;
    background-color: #007bff;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
}

.chat-input button:hover {
    background-color: #0056b3;
}

.chat-input button:disabled {
    background-color: #bbb;
    cursor: not-allowed;
}

footer {
  text-align: center;
  padding: 10px;
  background-color: #333;
  color: white;
}
</style>
<script>
   const chatBox = document.getElementById("chat-box");
    const messageInput = document.getElementById("message");
    const sendBtn = document.getElementById("submit-chat");

    const allCookies = document.cookie;
    const cookiesArray = allCookies.split('; ').reduce((acc, cookie) => {
        const [key, value] = cookie.split('=');
        acc[key] = value;
        return acc;
    }, {});
    const token = cookiesArray['jwt'];
    const username = cookiesArray['username'];

    if (!token) {
        alert("Token không tồn tại. Vui lòng đăng nhập.");
        window.location.href = "/login";
    }

    const ws = new WebSocket(`ws://localhost:5000/`);

    ws.onopen = function (e) {
        console.log('Connection to server opened');
        ws.send(JSON.stringify({ type: "authenticate", token: token }));
    };

    ws.onmessage = (e) => {
        const data = JSON.parse(e.data);
        console.log("Message from server:", data);
        if(data.username && data.message)
        appendLog(data.username, data.message);
    };
    ws.onclose = function (e) {
        appendLog("*", "Connection closed");
        console.log("Connection closed");
    };

    function appendLog(username, message) {
        const messages = document.getElementById('chat-box');
        const messageElem = document.createElement("div");
        const messageText = `<p>${username}: ${message}</p>`;
        messageElem.innerHTML = messageText;
        messages.appendChild(messageElem);
    }

    function sendMessage() {
        const messageField = document.getElementById('message');
        const messageContent = messageField.value.trim();

        if (ws.readyState === WebSocket.OPEN && messageContent) {
            console.log("Sending message: %s", messageContent);
            ws.send(JSON.stringify({
                type: "message",
                username: username,
                message: messageContent
            }));
        }

        messageField.value = '';
        messageField.focus();
    }

    sendBtn.addEventListener('click', sendMessage);

    messageInput.addEventListener('keydown', function (e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
</script>
</html>